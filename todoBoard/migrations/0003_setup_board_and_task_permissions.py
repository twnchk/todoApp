# Generated by Django 4.2.1 on 2024-01-10 17:02

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType

from todoBoard.models import TodoList, TodoItem


def create_board_group_permissions(apps, schema_editor):
    # Create group
    board_admins, _ = Group.objects.get_or_create(name='Board admins')
    board_editors, _ = Group.objects.get_or_create(name='Board editors')

    # Fetch TodoList(board) content type
    board_content_type = ContentType.objects.get_for_model(TodoList)

    # Add permissions
    board_admin_permissions = Permission.objects.filter(content_type=board_content_type)
    board_editor_permissions = Permission.objects.filter(content_type=board_content_type,
                                                         codename__in=['can_view_board', 'can_edit_board'])

    board_admins.permissions.set(board_admin_permissions)
    board_admins.save()

    board_editors.permissions.set(board_editor_permissions)
    board_editors.save()


def create_task_group_permissions(apps, schema_editor):
    # Create group
    task_permissions_group, _ = Group.objects.get_or_create(name='Task editors')

    # Fetch TodoList(board) content type
    task_content_type = ContentType.objects.get_for_model(TodoItem)

    # Add permissions
    task_permissions = Permission.objects.filter(content_type=task_content_type)

    task_permissions_group.permissions.set(task_permissions)
    task_permissions_group.save()


class Migration(migrations.Migration):

    dependencies = [
        ('todoBoard', '0002_todoitem_assignee'),
    ]

    operations = [
        migrations.RunPython(create_board_group_permissions),
        migrations.RunPython(create_task_group_permissions),
    ]
